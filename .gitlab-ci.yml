# Ensure that we have our vendor and generated submodules checked out.
before_script:
  - git submodule update --init --recursive

stages:
  - bootstrap
  - build

#
# The main Fabrique build uses Fabrique. This requires a bootstrapping step.
#
bootstrap:make:
  stage: bootstrap
  before_script: [apt update && apt install -y clang]
  script:
    - cd bootstrap
    - ./gen --format=make build
    - make -C build

  artifacts: {paths: ["bootstrap/build"]}

bootstrap:ninja:
  stage: bootstrap
  before_script: [apt update && apt install -y clang ninja-build]
  script:
    - cd bootstrap
    - ./gen --format=ninja build
    - ninja -C build

  artifacts: {paths: ["bootstrap/build"]}

#
# Build Fabrique using Fabrique.
#

build:make:
  dependencies: ["bootstrap:make"]
  stage: build
  before_script: [apt update && apt install -y clang]
  script:
    - mkdir -p build
    - cd build
    - ../bootstrap/build/fab --format=gmake -D debug=true ..
    - make everything
  artifacts:
    paths:
      - bin/fab
      - lib/*.so
      - lib/fabrique/*.so

build:ninja:
  dependencies: ["bootstrap:ninja"]
  stage: build
  before_script: [apt update && apt install -y clang ninja-build]
  script:
    - mkdir -p build
    - cd build
    - ../bootstrap/build/bin/fab --format=ninja -D debug=true ..
    - ninja everything
  artifacts:
    paths:
      - bin/fab
      - lib/*.so
      - lib/fabrique/*.so
