#
# RUN: fab --print-dag --format=make --output=%t %s
# RUN: FileCheck %s -input-file %t/Makefile
#

cc = action('cc -c ${src} -o ${obj}' <- src:file[in], obj:file[out]);
link = action('cc ${objects} -o ${bin}' <- objects:list[file[in]], bin:file[out]);
lex = action('${LEX} -c++ --yyclass=${classname} --outfile=${gen} ${src}'
              <- src:file[in], gen:file[out], classname:string);

cc_all = function(srcs:list[file]): list[file]
{
	foreach src <- srcs
	{
		obj = src + '.o';
		build = cc(src, obj);
		obj
	}
};

srcs = files(foo.c bar.c baz.c);
gen = lex(file('foo.yy'), file('foo.c'), classname = 'FooClass');
objs = cc_all(srcs);
bin = link(objs, file('foo'));


# CHECK: srcs= ${srcroot}/foo.c ${srcroot}/bar.c ${srcroot}/baz.c
#
# CHECK-DAG: bin : foo
# CHECK-DAG: gen : foo.c
# CHECK-DAG: objs : foo.c.o bar.c.o baz.c.o
#
# CHECK-DAG: foo.c : ${srcroot}/foo.yy
# CHECK-NEXT-TODO:  ${LEX} -c++ --yyclass=FooClass --outfile=foo.c foo.yy
#
# CHECK-DAG: foo.c.o : ${srcroot}/foo.c
# CHECK-NEXT-TODO:  cc -c ${srcroot}/bfoo.c -o foo.c.o
#
# CHECK-DAG: bar.c.o : ${srcroot}/bar.c
# CHECK-NEXT-TODO:  cc -c ${srcroot}/bbar.c -o bar.c.o
#
# CHECK-DAG: baz.c.o : ${srcroot}/baz.c
# CHECK-NEXT-TODO:  cc -c ${srcroot}/bbaz.c -o baz.c.o
#
# CHECK-DAG: foo : foo.c.o bar.c.o baz.c.o
# CHECK-NEXT-TODO:  cc foo.c.o bar.c.o baz.c.o -o foo
