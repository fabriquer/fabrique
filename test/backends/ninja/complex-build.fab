#
# RUN: fab --print-dag --format=ninja --output=%t %s
# RUN: FileCheck %s -input-file %t/build.ninja
#

cc = action('cc -c ${src} -o ${obj}' <- src:file[in], obj:file[out]);
link = action('cc ${objects} -o ${bin}' <- objects:list[file[in]], bin:file[out]);
lex = action('${LEX} -c++ --yyclass=${classname} --outfile=${gen} ${src}'
              <- src:file[in], gen:file[out], classname:string);

cc_all = function(srcs:list[file]): list[file]
{
	foreach src <- srcs
	{
		obj = src + '.o';
		build = cc(src, obj);
		obj
	}
};

gen = lex(file('foo.yy'), file('foo.c'), classname = 'FooClass');
srcs = [ gen file('bar.c') ];
objs = cc_all(srcs);
bin = link(objs, file('foo'));


# CHECK-DAG: build srcs : phony ${buildroot}/foo.c ${srcroot}/bar.c
#
# CHECK-DAG: rule cc
# CHECK-NEXT-TODO: command = cc -c ${in} -o ${out}
#
# CHECK-DAG: rule link
# CHECK-NEXT-TODO: command = cc ${in} -o ${out}
#
# CHECK-DAG: rule lex
# CHECK-NEXT-TODO: comamand = ${LEX} -c++ --yyclass=${classname} --outfile=${out}
#
# CHECK-DAG: build gen : phony ${buildroot}/foo.c
# CHECK-DAG: build objs : phony ${buildroot}/foo.c.o ${buildroot}/bar.c.o
# CHECK-DAG: build bin : phony ${buildroot}/foo
#
# CHECK-DAG: build ${buildroot}/foo.c: lex ${srcroot}/foo.yy
# CHECK-NEXT-TODO:  classname = FooClass
#
# CHECK-DAG: build ${buildroot}/foo.c.o: cc ${buildroot}/foo.c
# CHECK-DAG: build ${buildroot}/bar.c.o: cc ${srcroot}/bar.c
#
# CHECK-DAG: build ${buildroot}/foo: link ${buildroot}/foo.c.o ${buildroot}/bar.c.o
