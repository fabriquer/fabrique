# vim:syntax=python

import os
import sys

try:
	import lit

except ImportError:
	import lit36 as lit

config.name = 'Fabrique'
config.suffixes = [ '.fab' ]
config.excludes = [ 'Inputs', 'manifest.fab' ]
config.test_format = lit.formats.ShTest()

root = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
litdir = os.path.dirname(sys.argv[0])
path = config.environment['PATH']
path = os.path.pathsep.join((litdir, path))
config.environment['PATH'] = path

paths = config.environment['PATH'].split(os.pathsep)
params = lit_config.params

def find_tool(name):
	if name in params:
		binary = params[name]
		if os.access(binary, os.X_OK):
			return os.path.abspath(binary)

		sys.stderr.write("'%s' binary at %s is not executable!\n" % (
			name, binary
		))
		sys.exit(1)

	for path in paths:
		fullpath = os.path.join(path, name)
		if os.access(fullpath, os.X_OK):
			return os.path.abspath(fullpath)

	sys.stderr.write("Unable to find '%s' binary!\n" % name)
	sys.stderr.write("  Looked in PATH:\n")
	sys.stderr.write("".join([ "    %s\n" % p for p in paths]))
	sys.stderr.write("\n  Try passing -D %s=/path/to/binary\n" % name)
	sys.exit(1)

config.substitutions += [
	('%fab', find_tool('fab')),
]

if 'output-dir' in params:
	config.test_exec_root = params['output-dir']
else:
	import tempfile
	config.test_exec_root = tempfile.mkdtemp(prefix = 'fabrique-test')
