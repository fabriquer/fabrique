# vim:syntax=python

import lit
import os

config.name = 'Fabrique'
config.suffixes = [ '.fab' ]
config.excludes = [ 'Inputs', 'manifest.fab' ]
config.test_format = lit.formats.ShTest()

paths = config.environment['PATH'].split(os.pathsep)
params = lit_config.params

def find_tool(name):
	if name in params:
		binary = params[name]
		if os.access(binary, os.X_OK):
			return os.path.abspath(binary)

		lit_config.error("Tool '%s' ('%s') is not executable" % (name, binary))

	for path in paths:
		fullpath = os.path.join(path, name)
		if os.access(fullpath, os.X_OK):
			return os.path.abspath(fullpath)

	lit_config.error("unable to find '%s' binary" % name)
	lit_config.note("looked in PATH: %s" % paths)
	lit_config.note("try -D %s=/path/to/binary" % name)

config.substitutions += [
	('%fab', find_tool('fab')),
	('%check', find_tool('FileCheck')),
]

if 'output-dir' in params:
	config.test_exec_root = params['output-dir']
else:
	import tempfile
	config.test_exec_root = tempfile.mkdtemp(prefix = 'fabrique-test')
